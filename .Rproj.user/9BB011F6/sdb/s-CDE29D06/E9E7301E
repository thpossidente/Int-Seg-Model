{
    "collab_server" : "",
    "contents" : "#include <Rcpp.h>\nusing namespace Rcpp;\n\n// This is a simple example of exporting a C++ function to R. You can\n// source this function into an R session using the Rcpp::sourceCpp \n// function (or via the Source button on the editor toolbar). Learn\n// more about Rcpp at:\n//\n//   http://www.rcpp.org/\n//   http://adv-r.had.co.nz/Rcpp.html\n//   http://gallery.rcpp.org/\n//\n\n// [[Rcpp::export]]\n\nNumericVector timesTwo(NumericVector x) {\n  return x * 2;\n}\n\nList forwardPass(NumericVector input, NumericMatrix inputToHiddenWeights, NumericVector hiddenBiasWeights, NumericMatrix hiddenToOutputWeights, NumericVector outputBiasWeights){\n  \n  NumericVector hidden;\n  for(int i=0; i<hidden.length(); i++){\n    hidden[i] += hiddenBiasWeights[i,1]\n    for(int j=0; j<input.length(); j++){\n      if(inputToHiddenWeights[j,i] != NAN) {\n        hidden[i] += input[j] * inputToHiddenWeights[j,i];\n      }\n    }\n  }\n  \n  for(int, c=0; i<){\n    \n  }\n}\n\n// You can include R code blocks in C++ files processed with sourceCpp\n// (useful for testing and development). The R code will be automatically \n// run after the compilation.\n//\n\n/*** R\n\n*/\n",
    "created" : 1516897314264.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1653956865",
    "id" : "E9E7301E",
    "lastKnownWriteTime" : 1516902920,
    "last_content_update" : 1516902920463,
    "path" : "~/GitHub/Int-Seg-Model/multi-layer-network-cpp.cpp",
    "project_path" : "multi-layer-network-cpp.cpp",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "cpp"
}